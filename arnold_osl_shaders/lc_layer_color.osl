#include "common/alshaders.h"

color blend(color l1, color l2, float a, string mode,int clamp_result) 
{
    color result;
    if(mode == "Lighten")
		result = max(l1, l2);
	else if(mode == "Darken")
		result = min(l1, l2);
	else if(mode == "Multiply")
		result = l1 * l2;
	else if(mode == "Average")
		result = (l1 + l2) * 0.5;
	else if(mode == "Add")
	{
		result = l1 + l2;
        if (clamp_result)
            result = min(result, color(1,1,1));
	}
	else if(mode == "Subtract")
    {
        result = l1 + l2 - color(1,1,1);
        if (clamp_result)
            result = max(result, color(0,0,0));
    }
	else if(mode == "Difference")
		result = fabs(l1 - l2);
	else if(mode == "Negation")
        result = color(1,1,1) - fabs(color(1,1,1) - l1 - l2);
	else if(mode == "Exclusion")
        result = l1 + l2 - (2.0 * l1 * l2);	
	else if(mode == "Screen")
        result = color(1,1,1) - ((color(1,1,1) - l1) * (color(1,1,1) - l2));
	else if(mode == "Overlay")
		result = overlay(l1, l2);
	else if(mode == "SoftLight")
        result = softlight(l1, l2);
	else if(mode == "HardLight")
        result = overlay(l2, l1);
	else if(mode == "ColorDodge")
        result = colordodge(l1, l2, clamp_result);
	else if(mode == "ColorBurn")
        result = colorburn(l1, l2);
	else if(mode == "LinearLight")
        result = linearlight(l1, l2, clamp_result);
	else if(mode == "VividLight")
        result = vividlight(l1, l2, clamp_result);
	else if(mode == "PinLight")
        result = pinlight(l1, l2);
	else if(mode == "HardMix")
        result = hardmix(l1, l2, clamp_result);
	else if(mode == "Reflect")
        result = reflects(l1, l2, clamp_result);
	else if(mode == "Glow")
        result = reflects(l2, l1, clamp_result);
	else if(mode == "Phoenix")
        result = min(l1, l2) - max(l1, l2) + color(1,1,1);
    else
    	result = l2;

    return lerp(l1, result, a);
}
shader lc_layer_color(
    color layer1 = color(0, 0, 0),
    string layer1_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer1_alpha = 1,
    int layer1_enabled = 1,

    color layer2 = color(0, 0, 0),
    string layer2_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer2_alpha = 1,
    int layer2_enabled = 0,

    color layer3 = color(0, 0, 0),
    string layer3_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer3_alpha = 1,
    int layer3_enabled = 0,

    color layer4 = color(0, 0, 0),
    string layer4_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer4_alpha = 1,
    int layer4_enabled = 0,

    color layer5 = color(0, 0, 0),
    string layer5_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer5_alpha = 1,
    int layer5_enabled = 0,

    color layer6 = color(0, 0, 0),
    string layer6_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer6_alpha = 1,
    int layer6_enabled = 0,

    color layer7 = color(0, 0, 0),
    string layer7_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer7_alpha = 1,
    int layer7_enabled = 0,

    color layer8 = color(0, 0, 0),
    string layer8_blend = "Normal"
    [[string widget = "popup",string options = "Normal|Lighten|Darken|Multiply|Average|Add|Subtract|Difference|Negation|Exclusion|Screen|Overlay|SoftLight|HardLight|ColorDodge|ColorBurn|LinearLight|VividLight|PinLight|HardMix|Reflect|Glow|Phoenix"]],
    float layer8_alpha = 1,
    int layer8_enabled = 0,

    int clamp_result = 1,
    output color outColor = color(0, 0, 0))
{
	color result = color(0);
	color layer[8] = {layer1,layer2,layer3,layer4,layer5,layer6,layer7,layer8};
	string layer_blend[8] = {layer1_blend,layer2_blend,layer3_blend,layer4_blend,layer5_blend,layer6_blend,layer7_blend,layer8_blend};
	float layer_alpha[8] = {layer1_alpha,layer2_alpha,layer3_alpha,layer4_alpha,layer5_alpha,layer6_alpha,layer7_alpha,layer8_alpha};
	int layer_enabled[8] = {layer1_enabled,layer2_enabled,layer3_enabled,layer4_enabled,layer5_enabled,layer6_enabled,layer7_enabled,layer8_enabled};

	for(int i=0;i <8;i++)
	{
		if(layer_enabled[i])
		{
			result = blend(result, layer[i], layer_alpha[i], layer_blend[i], clamp_result);
		}
	}

	outColor = result;
}

